<%- include('../partials/user/header') %>
<style>
    /* Remove spinner buttons in modern browsers (Chrome, Safari, Edge, Opera, Firefox) */
    .quantity-input {
      appearance: none; /* Modern browsers */
      -moz-appearance: none; /* Firefox */
      -webkit-appearance: none; /* Safari, Chrome */
      margin: 0; /* Prevent margin issues in WebKit-based browsers */
    }
  
    .quantity-input::-webkit-outer-spin-button,
    .quantity-input::-webkit-inner-spin-button {
      display: none; /* Hide WebKit-based browsers' spin buttons */
    }
    .quantity-container {
    display: flex;
    align-items: center;
    }

    .quantity-input {
    width: 50px;
    text-align: center;
    }

    .quantity-buttons {
    display: flex;
    flex-direction: column;
    margin-left: 10px; /* Adjust spacing between input and buttons */
    }

    .quantity-buttons a {
    display: block;
    text-align: center;
    
    }
    .add-product-disabled{
        pointer-events: none; 
        opacity: 0.5;
    }
    .buy-now{
        padding: 10px 30px;
        border-radius: 15px;
        background-color: rgb(10, 150, 10);
        color: #fff;
        border: none;
    }
    .start-shopping{
        padding: 20px 50px;
    }
    .empty-cart{
        text-align: center;
    }
    .empty-cart .empty-image {
        
        max-width: 100%;
        height: auto;
        width: 300px;
        

    }
    .start-shopping {
        
        margin-top: 20px;
        padding: 10px 20px;
        background-color: #007bff;
        color: white;
        text-decoration: none;
        border-radius: 5px;
        transition: background-color 0.3s;
        border: none;
        font-size: 16px;
        display: block; /* Ensure the button appears on a new line */
        margin-left: auto;
        margin-right: auto; /* Centers the button */
    }

  </style>

    <!-- Cart items details -->
    <div class="small-container cart-page">
        <% if(cartData && cartData.length>0) { %>
        <table>
            <tr>
                <th>Product</th>
                <th>Quantity</th>
                <th>Subtotal</th>
            </tr>
         <% let Subtotal=0 %>
         <% let tax=35 %>

         
            
            <% for(let i=0;i<cartData.length;i++){ %>
                <tr>
                    <td>
                        <div class="cart-info">
                            <img src="/uploads/<%= cartData[i].productId.croppedImage[0] %>">
                            <div>
                                <p><%= cartData[i].productId.name %></p>
                                <small><%= cartData[i].productId.price %></small>
                                <p>Size : <%= cartData[i].size %></p>
                                <br>
                                <a href="/productDetails/addCart/sub?qty=<%= cartData[i].quantity  %>&id=<%= cartData[i]._id %>&size=<%=cartData[i].size %>&productId=<%= cartData[i].productId._id %>">Remove</a>
                            </div>
                        </div>
                    </td>
                    <td> 
                        <div class="quantity-container">
                        <input type="number" value="<%= cartData[i].quantity %>" class="quantity-input">
                        <div class="quantity-buttons">
                           
                         
                        <a href="#"
                            class="add-quantity"
                            data-id="<%= cartData[i]._id %>"
                            data-size="<%= cartData[i].size %>"
                            data-productId="<%= cartData[i].productId._id %>"
                            data-quantity="<%= cartData[i].quantity %>">
                            <i class="fa-solid fa-plus"></i>
                        </a>

                          
                        <a href="#" 
                          class="minus-btn <%= cartData[i].quantity > 1 ? '' : 'add-product-disabled' %>"
                          data-id="<%= cartData[i]._id %>"
                          data-size="<%= cartData[i].size %>"
                          data-productId="<%= cartData[i].productId._id %>"
                          data-quantity="<%= cartData[i].quantity %>">
                           <i class="fa-solid fa-minus"></i>
                       </a>
                        </div>
                        </div>
                    </td>
                    <td><%= cartData[i].productId.price*cartData[i].quantity %></td>
                    <% Subtotal += cartData[i].productId.price*cartData[i].quantity %>
                </tr>
            <% } %>

           
            
        </table>
        <div class="total-price">
            <table>
                <tr>
                    <td>Subtotal</td>
                    <td><%= Subtotal %></td>
                </tr>
                <tr>
                    <td>Tax</td>
                    <td><%= tax %></td>
                </tr>
                <tr>
                    <td>Total</td>
                    <td><%= tax+Subtotal %></td>
                </tr>
                <td></td>
                <td><button class="buy-now"><a href="/productDetails/cart/checkout" style="color: #fff; font-weight: bold; font-size: 20px;">Buy now</a></button></td>
            </table>
        </div>
        <% } else{ %>
            
                <div class="empty-cart">
                    <img class="img-fluid empty-image" src="/images/empty-shop-cart-icon-flat-style-vector.jpg" alt="">
                    <button class="start-shopping"><a style="color: #fff;" href="/products">Start Shopping</a></button>
                </div>
            
            
         <%} %> 
    </div>

    <!-- Footer -->
    <%- include('../partials/user/footer') %>

    <script>
        document.addEventListener('DOMContentLoaded', () => {
            
            document.querySelectorAll('.minus-btn').forEach(button => {
                button.addEventListener('click', async function(e) {
                    e.preventDefault(); 
                    
                    
                    const productId = this.getAttribute('data-productId');
                    const size = this.getAttribute('data-size');
                    const id = this.getAttribute('data-id');
                    const quantity = parseInt(this.getAttribute('data-quantity'));
    
                    
                    if (quantity > 1) {
                        
                        const url = `/productDetails/addCart/sub?productId=${productId}&size=${size}&id=${id}`;
    
                        try {
                           
                            const response = await fetch(url, {
                                method: 'GET', 
                            });
    
                            if (response.ok) {
                                
                                window.location.reload();
                            } else {
                                console.error('Error updating cart:', response.statusText);
                            }
                        } catch (error) {
                            console.error('Error updating cart:', error);
                        }
                    }
                });
            });

            document.querySelectorAll(".add-quantity").forEach(addButton => {
                addButton.addEventListener("click",async function (e){
                e.preventDefault()

                
                const productId = this.getAttribute('data-productId');
                const size = this.getAttribute('data-size');
                const id = this.getAttribute('data-id');
                const quantity = parseInt(this.getAttribute('data-quantity'));

                
                    const url = `/productDetails/addCart/addQty?productId=${productId}&size=${size}&id=${id}`;
                    try {
                        const response=await fetch(url,{
                            method:"GET",
                        });
                        const data=await response.json()
                        if (data.success) {
                                
                            window.location.reload();
                        } else {
                            console.error("out of stock");
                            showToast(data.message);
                            
                        }

                    } catch (error) {
                        console.error('Error updating cart:', error);
                    }
                
                })
            })

            function showToast(message) {
            // Create the toast div
            const toast = document.createElement('div');
            toast.innerText = message;

            // Apply basic inline styles for toast
            toast.style.position = 'fixed';
            toast.style.bottom = '200px'; // You can change this to position it higher or lower
            toast.style.left = '50%'; // Center horizontally
            toast.style.transform = 'translateX(-50%)'; // Adjust for centering
            toast.style.backgroundColor = 'red'; // Darker background for better visibility
            toast.style.color = '#fff';
            toast.style.padding = '15px 30px'; // Increase padding for a larger appearance
            toast.style.borderRadius = '8px'; // Larger border radius for a smoother appearance
            toast.style.zIndex = '1000';
            toast.style.fontSize = '30px'; // Increase font size
            toast.style.fontWeight= "bold"
            toast.style.maxWidth = '80%'; // Limit width to 80% of the screen width
            toast.style.textAlign = 'center';
            

            // Append the toast to the body
            document.body.appendChild(toast);

            // Remove the toast after 3 seconds
            setTimeout(() => {
                document.body.removeChild(toast);
            }, 1000);
        }
            
        });
    </script>
    
    